// <auto-generated />
using System;
using Docentes.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Docentes.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Docentes.Domain.CursosImpartidos.CursoImpartido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uuid")
                        .HasColumnName("curso_id");

                    b.Property<Guid?>("DocenteId")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("docente_id");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id")
                        .HasName("pk_cursos_impartidos");

                    b.HasIndex("DocenteId")
                        .HasDatabaseName("ix_cursos_impartidos_docente_id");

                    b.ToTable("cursos_impartidos", (string)null);
                });

            modelBuilder.Entity("Docentes.Domain.Docentes.Docente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("EspecialidadId")
                        .HasColumnType("uuid")
                        .HasColumnName("especialidad_id");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid")
                        .HasColumnName("usuario_id");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id")
                        .HasName("pk_docentes");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasDatabaseName("ix_docentes_usuario_id");

                    b.ToTable("docentes", (string)null);
                });

            modelBuilder.Entity("Docentes.Domain.CursosImpartidos.CursoImpartido", b =>
                {
                    b.HasOne("Docentes.Domain.Docentes.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cursos_impartidos_docente_docente_id");

                    b.Navigation("Docente");
                });
#pragma warning restore 612, 618
        }
    }
}
