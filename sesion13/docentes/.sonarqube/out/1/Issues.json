{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.10.0.0",
        "fileVersion": "4.10.0-3.24216.12 (3af0081a)",
        "semanticVersion": "4.10.0",
        "language": "es-MX"
      },
      "results": [
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Exceptions/ConcurrencyException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Exceptions/ConcurrencyException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 15,
                  "endLine": 3,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Exceptions/ConcurrencyException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 15,
                  "endLine": 3,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ConcurrencyException' because it implements 'ISerializable'.",
              "1": "Add a 'private' constructor 'ConcurrencyException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3376",
          "level": "warning",
          "message": "Make this class name end with 'Exception'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Exceptions/ValidationExceptions.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Exceptions/ValidationExceptions.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Exceptions/ValidationExceptions.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 8,
                  "endLine": 3,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Exceptions/ValidationExceptions.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 8,
                  "endLine": 3,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ValidationExceptions' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ValidationExceptions(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Es preferible comparar \"Count\" con 0 en lugar de usar \"Any()\", tanto por claridad como por rendimiento.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Abstractions/Behaviors/ValidationBehavior.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 38,
                  "endLine": 33,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Es preferible comparar \"Count\" con 0 en lugar de usar \"Any()\", tanto por claridad como por rendimiento.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Abstractions/Behaviors/ValidationBehavior.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 12,
                  "endLine": 41,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "La plantilla de mensaje de registro no debe variar entre las llamadas a \"LoggerExtensions.LogInformation(ILogger, string?, params object?[])\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 36,
                  "endLine": 26,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "La plantilla de mensaje de registro no debe variar entre las llamadas a \"LoggerExtensions.LogInformation(ILogger, string?, params object?[])\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 36,
                  "endLine": 28,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "La plantilla de mensaje de registro no debe variar entre las llamadas a \"LoggerExtensions.LogError(ILogger, Exception?, string?, params object?[])\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Git/NET29ENE25/sesion13/docentes/src/Docentes/Docentes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 34,
                  "endLine": 33,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Evitar usar el método de extensión \"Enumerable.Any()\"",
          "fullDescription": "Es preferible usar las propiedades \"IsEmpty\", \"Count\" o \"Length\", si hay alguna disponible, en lugar de llamar a \"Enumerable.Any()\". La intención es más clara y tiene un mejor rendimiento que usar el método de extensión \"Enumerable.Any()\".",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "La plantilla debe ser una expresión estática",
          "fullDescription": "La plantilla de mensaje de registro no debe variar entre llamadas.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S3376": {
          "id": "S3376",
          "shortDescription": "Attribute, EventArgs, and Exception type names should end with the type being extended",
          "fullDescription": "Adherence to the standard naming conventions makes your code not only more readable, but more usable. For instance, class FirstAttribute : Attribute can be used simply with First, but you must use the full name for class AttributeOne : Attribute.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3376",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}